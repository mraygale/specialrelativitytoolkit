function plotData(data, rs, light, los, limits, incoming)  % Traveler worldlines  plot(data.outgoing.worldline(:,1), data.outgoing.worldline(:,2), data.color, 'linewidth', 2);  if incoming    plot(data.incoming.worldline(:,1), data.incoming.worldline(:,2), data.color, 'linewidth', 2);  endif  % Traveler time ticks  linestyle = [data.color 's'];  if isempty(data.outgoing.ticks) == false    plot(data.outgoing.ticks(:,1), data.outgoing.ticks(:,2), linestyle)  endif  if isempty(data.incoming.ticks) == false && incoming    plot(data.incoming.ticks(:,1), data.incoming.ticks(:,2), linestyle)  endif  % Bystander worldline  if data.v != 0 && light    x1 = data.outgoing.worldline(1,1);    t1 = data.outgoing.worldline(1,2);    x2 = data.incoming.worldline(end,1);    t2 = data.incoming.worldline(end,2);    plot([x1 x2], [t1 t2], data.color)  endif  % Light rays  if light    plotLightRays(data.bystander.outgoing, 'r', limits)    plotLightRays(data.outgoing.bystander, 'r', limits)    if incoming      plotLightRays(data.bystander.incoming, 'b', limits)      plotLightRays(data.incoming.bystander, 'b', limits)    endif    plotLightRays(data.bystander.waypoint, 'k', limits)    plotLightRays(data.waypoint.bystander, 'k', limits)  endif  % Lines of simultaensity  if los    ticks = data.outgoing.ticks;    if rows(ticks) < numel(data.outgoing.los)      ticks = [ticks; data.outgoing.worldline(end,:)];    endif    plotLoS(ticks, data.outgoing.los, data.color, limits)    if incoming      if isfield(data,"waypoint")        ticks = data.incoming.worldline(1,:);        plotLoS(ticks, data.waypoint.los, data.color, limits);      endif      ticks = data.incoming.ticks;      if rows(ticks) < numel(data.incoming.los)        ticks = [data.incoming.worldline(1,:); ticks];      endif      plotLoS(ticks, data.incoming.los, data.color, limits)    endif  endifendfunctionfunction plotLightRays(rays, color, limits)  if iscell(rays) == false    rays = {rays};  endif  for i=1:numel(rays)    if rows(rays{i}) > 0      ray{i} = trim(rays{i}, limits);      if isempty(rays{i}) == false        plot(rays{i}(:,1), rays{i}(:,2), [color '--'])      endif    endif  endforendfunctionfunction plotLoS(ticks, los, color, limits)  if iscell(los) == false    los = {los};  endif  for i=1:numel(los)    if isempty(los{i}) == false      los{i} = trim(los{i}, limits);      if limits(1) <= ticks(i,1) && ticks(i,1) <= limits(2) && ...         limits(3) < ticks(i,2) && ticks(i,2) < limits(4)        plot(los{i}(:,1), los{i}(:,2), [color '--'])      endif    endif  endforendfunction