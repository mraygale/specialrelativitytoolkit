function limits = plotMinkowskiGrid(limits, xs, rs, alt=false, res=0.0001, step=0.1, color=[0 0 0] + 0.75)  % INPUTS:  %   limits = [xmin xmax tmin tmax]  %   xs = Location of Schwarzschild singularity  %   rs = Schwarzchild radius  %   res = resolution (i.e. granularity)  %   step = line spacing  %   color = RGB array line color ([0 0 0] + 0.75 = grey)  if rs < 0    error('Illegal Schwarzschild radius')  elseif rs > 0    if xs > 0      limits(2) = xs - rs - res;    else      limits(1) = xs + rs + res;    endif  endif  x = 0:res:limits(2);  if isempty(x) == false    % Top Right Quadrant Constant Time    for tick=0:step:limits(4)      t = sqrt(x.^2 + tick^2);      data = [x' t'];      data = schwarzschild(data, xs, rs, alt);      top = trim(data, limits);      if isempty(top) == false        plot(top(:,1), top(:,2), 'color', color)      endif    endfor    % Bottom Right Quadrant Constant Time    for tick=0:-step:limits(3)      t = -sqrt(x.^2 + tick^2);      data = [x' t'];      data = schwarzschild(data, xs, rs, alt);      top = trim(data, limits);      if isempty(top) == false        plot(top(:,1), top(:,2), 'color', color)      endif    endfor  endif  x = 0:-res:limits(1);  if isempty(x) == false    % Top Left Quadrant Constant Time    for tick=0:step:limits(4)      t = sqrt(x.^2 + tick^2);      data = [x' t'];      data = schwarzschild(data, xs, rs, alt);      data = trim(data, limits);      if isempty(data) == false        plot(data(:,1), data(:,2), 'color', color)      endif    endfor    % Bottom Left Quadrant Constant Time    for tick=0:-step:limits(3)      t = -sqrt(x.^2 + tick^2);      data = [x' t'];      data = schwarzschild(data, xs, rs, alt);      data = trim(data, limits);      if isempty(data) == false        plot(data(:,1), data(:,2), 'color', color)      endif    endfor  endif    % Right Quadrant Constant Space  for tick=step:step:limits(2)    x = tick:res:limits(2);    if isempty(x) == false      t = sqrt((x.^2 - tick^2));      data = [x' t'];      data = schwarzschild(data, xs, rs, alt);      top = trim(data, limits);      if isempty(top) == false        plot(top(:,1), top(:,2), 'color', color)      endif      data(:,2) *= -1;      bottom = trim(data, limits);      if isempty(bottom) == false        plot(bottom(:,1), bottom(:,2), 'color', color)      endif    endif  endfor  % Left Quadrant Constant Space  for tick=-step:-step:limits(1)    x = tick:-res:limits(1);    if isempty(x) == false      t = sqrt((x.^2 - tick^2));      data = [x' t'];      data = schwarzschild(data, xs, rs, alt);      top = trim(data, limits);      if isempty(top) == false        plot(top(:,1), top(:,2), 'color', color)      endif      data(:,2) *= -1;      bottom = trim(data, limits);      if isempty(bottom) == false        plot(bottom(:,1), bottom(:,2), 'color', color)      endif    endif  endfor  if rs > 0    if xs > 0      limits(2) = xs;      fill([xs-rs xs-rs xs xs], [limits(3) limits(4) limits(4) limits(3)], 'k');    else      limits(1) = xs;      fill([xs xs xs+rs xs+rs], [limits(3) limits(4) limits(4) limits(3)], 'k');    endif  endifendfunction